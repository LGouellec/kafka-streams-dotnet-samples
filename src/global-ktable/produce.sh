#!/bin/bash

seq -f "1|{\"name\": \"iPhone %g\", \"id\": 1}" 10 10 | docker exec -i schema-registry kafka-avro-console-producer --bootstrap-server broker:29092 --property schema.registry.url=http://localhost:8081 --topic product --property value.schema='{"type":"record","name":"Product","namespace":"com.dotnet.samples.avro","fields":[ {"name":"id","type":"int"},{"name":"name","type":"string"} ]}' --property parse.key=true --property key.separator=\| --property key.serializer=org.apache.kafka.common.serialization.StringSerializer
seq -f "1|{\"name\": \"Customer %g\", \"id\": 1}" 1 1 | docker exec -i schema-registry kafka-avro-console-producer --bootstrap-server broker:29092 --property schema.registry.url=http://localhost:8081 --topic customer --property value.schema='{"type":"record","name":"Customer","namespace":"com.dotnet.samples.avro","fields":[ {"name":"id","type":"int"},{"name":"name","type":"string"} ]}' --property parse.key=true --property key.separator=\| --property key.serializer=org.apache.kafka.common.serialization.StringSerializer
for i in {1..3}; do echo "${i}|{\"productId\": 1, \"id\": ${i}, \"customerId\": 1}";done | docker exec -i schema-registry kafka-avro-console-producer --bootstrap-server broker:29092 --property schema.registry.url=http://localhost:8081 --topic order --property value.schema='{"type":"record","name":"Order","namespace":"com.dotnet.samples.avro","fields":[ {"name":"id","type":"int"},{"name":"customerId","type":"int"},{"name":"productId","type":"int"} ]}' --property parse.key=true --property key.separator=\| --property key.serializer=org.apache.kafka.common.serialization.StringSerializer